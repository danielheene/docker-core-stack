version: '2'

services:
  traefik-balancer:
    container_name: traefik-balancer
    image: traefik
    restart: always
    ports:
      - "80:80"
      - "443:443"
    networks:
      - web
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./etc/traefik.toml:/traefik.toml
      - ./etc/acme.json:/acme.json

  traefik-catchall:
    container_name: traefik-catchall
    image: nginx
    restart: always
    expose:
      - "80"
    networks:
      - web
    depends_on:
      - traefik-balancer
    volumes:
      - ./www/index.html:/usr/share/nginx/html/index.html:ro
    labels:
      - "traefik.backend=catchall"
      - "traefik.frontend.rule=HostRegexp:{catchall:.*}"
      - "traefik.frontend.priority=1"
      - "traefik.enable=true"
      - "traefik.port=80"
      - "traefik.default.protocol=http"

  portainer:
    container_name: portainer
    image: portainer/portainer
    restart: always
    expose:
      - "9000"
    networks:
      - web
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - core_stack:/data
    labels:
      - "traefik.backend=portainer"
      - "traefik.frontend.rule=Host:portainer.danielheene.de"
      - "traefik.enable=true"
      - "traefik.port=9000"
      - "traefik.default.protocol=http"

  watchtower:
    container_name: watchtower
    image: v2tec/watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  web:
    external: true

volumes:
  core_stack:
